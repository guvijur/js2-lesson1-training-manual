// Я всегда пишу много комментариев.
// Так я лучше понимаю материал.
//
// Создаю функцию-конструктор:
function Car(model, color, transmission, engine) {
    this.model = model;
    this.color = color;
    this.transmission = transmission;
    this.engine = engine;
}
// ВАЖНО! this - указывает, что данные свойства будут доступны объекту,
// который будет создан при помощи данной функции-конструктора.
//
// Теперь для создания объекта воспользуемся оператором new
// Вместо var буду использовать let, т.к. это не позволит мне дублировать
// переменные или объекты, что очень важно бри большом количестве кода на
// много-много строк, когда можно забыть, что ту или иную переменную
// или объект я использовал ранее.
// 
// Создам объект opel.
// Для этого я вызываю функцию-конструктор (далее ФК) и передаю ей требуемые значения:
// цвет, тип коробки передач, а так же параметры двигателя - объем и мощность 
// в виде объекта.
let opel = new Car("Astra H", "black", "AT", {volume: 1.8, power: 140});
// На данном этапе я запускаю index.html в браузере и с помощью консоли
// проверяю, что объект мой создался.
// Дополнительно я выведу это в консоль через console.log
console.log('Объект:');
console.log(opel);
// Создам ещё один объект.
let lada = new Car("Vesta", "white", "MT", {volume: 1.6, power: 106});
console.log('Объект:');
console.log(lada);
// Итого: я создал два экземпляра чертежа, каждый со своими свойствами.
// Как получать значения свойств объекта я знаю: objectname.property
// Вложенных объектов: objectname.insideobjectname.property
//
//
// ВТОРОЙ СПОСОБ СОЗДАНИЯ ОБЪЕКТОВ
// Метод Object.create
// Object - некий глобальный объект, встроенный в JS. 
// create - метод.
// Почему он нам больше подходит? Ну мы же хотим изучить наследование,
// а он как раз его реализует. Так же, он позволяет создавать объекты по
// прототипу, не определяя при этом конструктор.
// Попробую понять, о чём вообще я сейчас анписал. Пока в голове каша.
// 
// Создаю функцию, содержащую ряд элементов:
function Vehicle() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.color = "green";
}
// Что-же, мля, я написал? Я написал функцию, содержащую некие координаты x, y и z, 
// а так же указание на зелёный цвет чего-то. 
// С помощью this я сказал, что переменные x, y, z и color будут доступны из вне
// тем объектом, который будет создан благодаря этой функции.


























